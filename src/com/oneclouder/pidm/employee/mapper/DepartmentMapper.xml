<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oneclouder.pidm.employee.dao.IDepartmentDao" >
  <resultMap id="BaseResultMap" type="com.oneclouder.pidm.employee.model.Department" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
  </resultMap>
  <!--缓存配置-->
  <!--<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>-->

  <sql id="Base_Column_List" >
    id, code, name, description, parent_id
  </sql>

  <sql id="Multi_Column_List" >
    d.id, d.code, d.name, d.description, d.parent_id
  </sql>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from T_DEPARTMENT
  </select>

  <!--根据岗位id查找部门-->
  <select id="findByJB" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Multi_Column_List"/>
    from T_DEPARTMENT d
    left join T_JOB_POSITION j on (j.department_id = d.id)
    where j.id = #{jbId,jdbcType=INTEGER}
  </select>

  <!-- 根据父查找子 -->
  <select id="findByParent" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from T_DEPARTMENT
    <where>
      <if test="parentId != null">
        and parent_id = #{parentId,jdbcType=INTEGER}
      </if>
      <if test="parentId == null">
        and parent_id is null
      </if>
    </where>
      order by id
  </select>

    <!--根据名称和父部门id查找部门-->
    <select id="findByNameAndParent" resultMap="BaseResultMap" parameterType="java.util.Map" >
        select
        <include refid="Base_Column_List" />
        from T_DEPARTMENT
        where name = #{name}
        and parent_id = #{parentId}
    </select>

    <!--根据编号查找部门-->
    <select id="findByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from T_DEPARTMENT
        where code = #{code}
    </select>

  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_DEPARTMENT
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from T_DEPARTMENT
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.oneclouder.pidm.employee.model.Department" >
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
          SELECT LAST_INSERT_ID()
      </selectKey>
    insert into T_DEPARTMENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="com.oneclouder.pidm.employee.model.Department" >
    update T_DEPARTMENT
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>